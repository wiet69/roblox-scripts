local WietGUI = {}
local TweenService = game:GetService("UserInputService")
local UserInputService = game:GetService("UserInputService")
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

local COLORS = {
	BACKGROUND = Color3.fromRGB(40, 40, 45),
	SILVER = Color3.fromRGB(192, 192, 192),
	TEXT = Color3.fromRGB(255, 255, 255),
	BUTTON = Color3.fromRGB(60, 60, 65),
	HOVER = Color3.fromRGB(70, 70, 75),
}

function WietGUI.new(title)
	local self = setmetatable({}, {__index = WietGUI})
	
	self.gui = Instance.new("ScreenGui")
	self.gui.Name = "WietGUI"
	self.gui.ResetOnSpawn = false
	
	self.main = Instance.new("Frame")
	self.main.Name = "Main"
	self.main.Size = UDim2.new(0, 400, 0, 300)
	self.main.Position = UDim2.new(0.5, -200, 0.5, -150)
	self.main.BackgroundColor3 = COLORS.BACKGROUND
	self.main.BorderSizePixel = 0
	self.main.Parent = self.gui
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = self.main
	
	local stroke = Instance.new("UIStroke")
	stroke.Color = COLORS.SILVER
	stroke.Thickness = 2
	stroke.Parent = self.main
	
	self.title = Instance.new("Frame")
	self.title.Name = "Title"
	self.title.Size = UDim2.new(1, 0, 0, 40)
	self.title.BackgroundColor3 = COLORS.SILVER
	self.title.BorderSizePixel = 0
	self.title.Parent = self.main
	
	local titleCorner = Instance.new("UICorner")
	titleCorner.CornerRadius = UDim.new(0, 8)
	titleCorner.Parent = self.title
	
	self.titleText = Instance.new("TextLabel")
	self.titleText.Name = "TitleText"
	self.titleText.Size = UDim2.new(1, -20, 1, 0)
	self.titleText.Position = UDim2.new(0, 10, 0, 0)
	self.titleText.BackgroundTransparency = 1
	self.titleText.TextColor3 = COLORS.BACKGROUND
	self.titleText.TextSize = isMobile and 24 or 18
	self.titleText.Font = Enum.Font.GothamBold
	self.titleText.Text = title or "Wiet GUI"
	self.titleText.TextXAlignment = Enum.TextXAlignment.Left
	self.titleText.Parent = self.title
	
	self.close = Instance.new("TextButton")
	self.close.Name = "Close"
	self.close.Size = UDim2.new(0, 30, 0, 30)
	self.close.Position = UDim2.new(1, -35, 0, 5)
	self.close.BackgroundColor3 = COLORS.BACKGROUND
	self.close.TextColor3 = COLORS.TEXT
	self.close.Text = "X"
	self.close.TextSize = isMobile and 20 or 16
	self.close.Font = Enum.Font.GothamBold
	self.close.Parent = self.title
	
	local closeCorner = Instance.new("UICorner")
	closeCorner.CornerRadius = UDim.new(0, 6)
	closeCorner.Parent = self.close
	
	self.content = Instance.new("ScrollingFrame")
	self.content.Name = "Content"
	self.content.Size = UDim2.new(1, -20, 1, -50)
	self.content.Position = UDim2.new(0, 10, 0, 45)
	self.content.BackgroundTransparency = 1
	self.content.ScrollBarThickness = 4
	self.content.ScrollBarImageColor3 = COLORS.SILVER
	self.content.CanvasSize = UDim2.new(0, 0, 0, 0)
	self.content.AutomaticCanvasSize = Enum.AutomaticSize.Y
	self.content.Parent = self.main
	
	local padding = Instance.new("UIPadding")
	padding.PaddingTop = UDim.new(0, 10)
	padding.PaddingBottom = UDim.new(0, 10)
	padding.PaddingLeft = UDim.new(0, 10)
	padding.PaddingRight = UDim.new(0, 10)
	padding.Parent = self.content
	
	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 10)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = self.content
	
	self:_makeDraggable()
	
	self.close.MouseButton1Click:Connect(function()
		self.gui:Destroy()
	end)
	
	if isMobile then
		self.main.Size = UDim2.new(0, 600, 0, 450)
		self.main.Position = UDim2.new(0.5, -300, 0.5, -225)
	end
	
	return self
end

function WietGUI:_makeDraggable()
	local dragging, dragInput, dragStart, startPos
	
	self.title.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = self.main.Position
			
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	self.title.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			self.main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

function WietGUI:addButton(text, callback, silver)
	local button = Instance.new("TextButton")
	button.Name = text .. "Button"
	button.Size = UDim2.new(1, 0, 0, isMobile and 50 or 40)
	button.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
	button.TextColor3 = silver and COLORS.BACKGROUND or COLORS.TEXT
	button.Text = text
	button.TextSize = isMobile and 22 or 16
	button.Font = Enum.Font.Gotham
	button.Parent = self.content
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = button
	
	button.MouseButton1Click:Connect(function()
		if callback then callback() end
	end)
	
	return button
end

function WietGUI:addLabel(text)
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(1, 0, 0, isMobile and 40 or 30)
	label.BackgroundTransparency = 1
	label.TextColor3 = COLORS.TEXT
	label.Text = text
	label.TextSize = isMobile and 22 or 16
	label.Font = Enum.Font.Gotham
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = self.content
	
	return label
end

function WietGUI:addToggle(text, default, callback, silver)
	local container = Instance.new("Frame")
	container.Name = text .. "Toggle"
	container.Size = UDim2.new(1, 0, 0, isMobile and 50 or 35)
	container.BackgroundTransparency = 1
	container.Parent = self.content
	
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(0, 0, 1, 0)
	label.AutomaticSize = Enum.AutomaticSize.X
	label.BackgroundTransparency = 1
	label.TextColor3 = COLORS.TEXT
	label.Text = text
	label.TextSize = isMobile and 22 or 16
	label.Font = Enum.Font.Gotham
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = container
	
	local toggleBg = Instance.new("Frame")
	toggleBg.Name = "Background"
	toggleBg.Size = UDim2.new(0, isMobile and 60 or 40, 0, isMobile and 30 or 20)
	toggleBg.Position = UDim2.new(1, -toggleBg.Size.X.Offset, 0.5, -toggleBg.Size.Y.Offset/2)
	toggleBg.BackgroundColor3 = default and (silver and COLORS.SILVER or COLORS.BUTTON) or COLORS.BACKGROUND
	toggleBg.Parent = container
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(1, 0)
	corner.Parent = toggleBg
	
	local toggleCircle = Instance.new("Frame")
	toggleCircle.Name = "Circle"
	toggleCircle.Size = UDim2.new(0, isMobile and 26 or 16, 0, isMobile and 26 or 16)
	local circlePos = default and toggleBg.Size.X.Offset - toggleCircle.Size.X.Offset - 2 or 2
	toggleCircle.Position = UDim2.new(0, circlePos, 0.5, -toggleCircle.Size.Y.Offset/2)
	toggleCircle.BackgroundColor3 = COLORS.TEXT
	toggleCircle.Parent = toggleBg
	
	local circleCorner = Instance.new("UICorner")
	circleCorner.CornerRadius = UDim.new(1, 0)
	circleCorner.Parent = toggleCircle
	
	local isToggled = default or false
	
	local function updateToggle()
		local targetPos = isToggled and toggleBg.Size.X.Offset - toggleCircle.Size.X.Offset - 2 or 2
		local targetColor = isToggled and (silver and COLORS.SILVER or COLORS.BUTTON) or COLORS.BACKGROUND
		
		toggleCircle.Position = UDim2.new(0, targetPos, 0.5, -toggleCircle.Size.Y.Offset/2)
		toggleBg.BackgroundColor3 = targetColor
		
		if callback then callback(isToggled) end
	end
	
	toggleBg.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			isToggled = not isToggled
			updateToggle()
		end
	end)
	
	return {
		setValue = function(value)
			isToggled = value
			updateToggle()
		end,
		getValue = function()
			return isToggled
		end
	}
end

function WietGUI:addSlider(text, min, max, default, callback, silver)
	local container = Instance.new("Frame")
	container.Name = text .. "Slider"
	container.Size = UDim2.new(1, 0, 0, isMobile and 70 or 50)
	container.BackgroundTransparency = 1
	container.Parent = self.content
	
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(1, 0, 0, isMobile and 30 or 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = COLORS.TEXT
	label.Text = text
	label.TextSize = isMobile and 22 or 16
	label.Font = Enum.Font.Gotham
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = container
	
	local valueLabel = Instance.new("TextLabel")
	valueLabel.Name = "Value"
	valueLabel.Size = UDim2.new(0, 50, 0, isMobile and 30 or 20)
	valueLabel.Position = UDim2.new(1, -50, 0, 0)
	valueLabel.BackgroundTransparency = 1
	valueLabel.TextColor3 = COLORS.TEXT
	valueLabel.Text = tostring(default or min)
	valueLabel.TextSize = isMobile and 22 or 16
	valueLabel.Font = Enum.Font.Gotham
	valueLabel.TextXAlignment = Enum.TextXAlignment.Right
	valueLabel.Parent = container
	
	local sliderBg = Instance.new("Frame")
	sliderBg.Name = "Background"
	sliderBg.Size = UDim2.new(1, 0, 0, isMobile and 20 or 10)
	sliderBg.Position = UDim2.new(0, 0, 1, -sliderBg.Size.Y.Offset)
	sliderBg.BackgroundColor3 = COLORS.BACKGROUND
	sliderBg.BorderSizePixel = 0
	sliderBg.Parent = container
	
	local sliderCorner = Instance.new("UICorner")
	sliderCorner.CornerRadius = UDim.new(1, 0)
	sliderCorner.Parent = sliderBg
	
	local sliderFill = Instance.new("Frame")
	sliderFill.Name = "Fill"
	sliderFill.Size = UDim2.new(0, 0, 1, 0)
	sliderFill.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
	sliderFill.BorderSizePixel = 0
	sliderFill.Parent = sliderBg
	
	local fillCorner = Instance.new("UICorner")
	fillCorner.CornerRadius = UDim.new(1, 0)
	fillCorner.Parent = sliderFill
	
    	local sliderKnob = Instance.new("Frame")
	sliderKnob.Name = "Knob"
	sliderKnob.Size = UDim2.new(0, isMobile and 24 or 16, 0, isMobile and 24 or 16)
	sliderKnob.Position = UDim2.new(0, 0, 0.5, -sliderKnob.Size.Y.Offset/2)
	sliderKnob.BackgroundColor3 = silver and COLORS.SILVER or COLORS.TEXT
	sliderKnob.Parent = sliderBg
	
	local knobCorner = Instance.new("UICorner")
	knobCorner.CornerRadius = UDim.new(1, 0)
	knobCorner.Parent = sliderKnob
	
	local value = default or min
	local dragging = false
	
	local function updateSlider(input)
		local relativePos
		if input then
			relativePos = math.clamp((input.Position.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X, 0, 1)
		else
			relativePos = math.clamp((value - min) / (max - min), 0, 1)
		end
		
		value = min + (max - min) * relativePos
		if max - min < 1 then
			valueLabel.Text = string.format("%.2f", value)
		else
			valueLabel.Text = string.format("%d", value)
		end
		
		sliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
		sliderKnob.Position = UDim2.new(relativePos, -sliderKnob.Size.X.Offset/2, 0.5, -sliderKnob.Size.Y.Offset/2)
		
		if callback then callback(value) end
	end
	
	updateSlider()
	
	sliderBg.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			updateSlider(input)
		end
	end)
	
	sliderBg.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
	
	sliderBg.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			updateSlider(input)
		end
	end)
	
	return {
		setValue = function(newValue)
			value = math.clamp(newValue, min, max)
			updateSlider()
		end,
		getValue = function()
			return value
		end
	}
end

function WietGUI:addDropdown(text, options, default, callback, silver)
	local container = Instance.new("Frame")
	container.Name = text .. "Dropdown"
	container.Size = UDim2.new(1, 0, 0, isMobile and 50 or 40)
	container.BackgroundTransparency = 1
	container.Parent = self.content
	
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(1, 0, 0, isMobile and 30 or 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = COLORS.TEXT
	label.Text = text
	label.TextSize = isMobile and 22 or 16
	label.Font = Enum.Font.Gotham
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = container
	
	local dropButton = Instance.new("TextButton")
	dropButton.Name = "DropButton"
	dropButton.Size = UDim2.new(1, 0, 0, isMobile and 40 or 30)
	dropButton.Position = UDim2.new(0, 0, 0, label.Size.Y.Offset)
	dropButton.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
	dropButton.TextColor3 = silver and COLORS.BACKGROUND or COLORS.TEXT
	dropButton.Text = default or (options and options[1] or "Select")
	dropButton.TextSize = isMobile and 20 or 14
	dropButton.Font = Enum.Font.Gotham
	dropButton.Parent = container
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = dropButton
	
	local dropArrow = Instance.new("TextLabel")
	dropArrow.Name = "Arrow"
	dropArrow.Size = UDim2.new(0, isMobile and 30 or 20, 0, isMobile and 30 or 20)
	dropArrow.Position = UDim2.new(1, -dropArrow.Size.X.Offset - 5, 0.5, -dropArrow.Size.Y.Offset/2)
	dropArrow.BackgroundTransparency = 1
	dropArrow.TextColor3 = silver and COLORS.BACKGROUND or COLORS.TEXT
	dropArrow.Text = "▼"
	dropArrow.TextSize = isMobile and 16 or 12
	dropArrow.Font = Enum.Font.Gotham
	dropArrow.Parent = dropButton
	
	local dropFrame = Instance.new("Frame")
	dropFrame.Name = "DropFrame"
	dropFrame.Size = UDim2.new(1, 0, 0, 0)
	dropFrame.Position = UDim2.new(0, 0, 1, 5)
	dropFrame.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
	dropFrame.BorderSizePixel = 0
	dropFrame.Visible = false
	dropFrame.ZIndex = 10
	dropFrame.Parent = dropButton
	
	local dropCorner = Instance.new("UICorner")
	dropCorner.CornerRadius = UDim.new(0, 6)
	dropCorner.Parent = dropFrame
	
	local dropList = Instance.new("UIListLayout")
	dropList.SortOrder = Enum.SortOrder.LayoutOrder
	dropList.Parent = dropFrame
	
	local selectedOption = default or (options and options[1] or "")
	local isOpen = false
	
	local function updateDropdown()
		dropButton.Text = selectedOption
		container.Size = UDim2.new(1, 0, 0, label.Size.Y.Offset + dropButton.Size.Y.Offset + (isOpen and dropFrame.Size.Y.Offset + 5 or 0))
		
		if callback then callback(selectedOption) end
	end
	
	local function createOptions()
		for i, option in ipairs(options or {}) do
			local optionButton = Instance.new("TextButton")
			optionButton.Name = option
			optionButton.Size = UDim2.new(1, 0, 0, isMobile and 35 or 25)
			optionButton.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
			optionButton.BackgroundTransparency = 0.2
			optionButton.TextColor3 = silver and COLORS.BACKGROUND or COLORS.TEXT
			optionButton.Text = option
			optionButton.TextSize = isMobile and 18 or 14
			optionButton.Font = Enum.Font.Gotham
			optionButton.ZIndex = 11
			optionButton.Parent = dropFrame
			
			optionButton.MouseButton1Click:Connect(function()
				selectedOption = option
				isOpen = false
				dropFrame.Visible = false
				updateDropdown()
			end)
		end
		
		dropFrame.Size = UDim2.new(1, 0, 0, dropList.AbsoluteContentSize.Y)
	end
	
	dropButton.MouseButton1Click:Connect(function()
		isOpen = not isOpen
		dropFrame.Visible = isOpen
		dropArrow.Text = isOpen and "▲" or "▼"
		updateDropdown()
	end)
	
	if options and #options > 0 then
		createOptions()
	end
	
	updateDropdown()
	
	return {
		setValue = function(option)
			if table.find(options, option) then
				selectedOption = option
				updateDropdown()
			end
		end,
		getValue = function()
			return selectedOption
		end,
		setOptions = function(newOptions)
			options = newOptions
			for _, child in pairs(dropFrame:GetChildren()) do
				if child:IsA("TextButton") then
					child:Destroy()
				end
			end
			createOptions()
			if not table.find(options, selectedOption) and #options > 0 then
				selectedOption = options[1]
			end
			updateDropdown()
		end
	}
end

function WietGUI:addTextbox(text, default, callback, silver)
	local container = Instance.new("Frame")
	container.Name = text .. "Textbox"
	container.Size = UDim2.new(1, 0, 0, isMobile and 80 or 60)
	container.BackgroundTransparency = 1
	container.Parent = self.content
	
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(1, 0, 0, isMobile and 30 or 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = COLORS.TEXT
	label.Text = text
	label.TextSize = isMobile and 22 or 16
	label.Font = Enum.Font.Gotham
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = container
	
	local textboxFrame = Instance.new("Frame")
	textboxFrame.Name = "TextboxFrame"
	textboxFrame.Size = UDim2.new(1, 0, 0, isMobile and 40 or 30)
	textboxFrame.Position = UDim2.new(0, 0, 0, label.Size.Y.Offset + 5)
	textboxFrame.BackgroundColor3 = silver and COLORS.SILVER or COLORS.BUTTON
	textboxFrame.BorderSizePixel = 0
	textboxFrame.Parent = container
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = textboxFrame
	
	local textbox = Instance.new("TextBox")
	textbox.Name = "Textbox"
	textbox.Size = UDim2.new(1, -20, 1, -10)
	textbox.Position = UDim2.new(0, 10, 0, 5)
	textbox.BackgroundTransparency = 1
	textbox.TextColor3 = silver and COLORS.BACKGROUND or COLORS.TEXT
	textbox.PlaceholderColor3 = silver and Color3.fromRGB(30, 30, 30) or Color3.fromRGB(150, 150, 150)
	textbox.PlaceholderText = "Enter text..."
	textbox.Text = default or ""
	textbox.TextSize = isMobile and 20 or 14
	textbox.Font = Enum.Font.Gotham
	textbox.ClearTextOnFocus = false
	textbox.Parent = textboxFrame
	
	textbox.FocusLost:Connect(function(enterPressed)
		if callback then
			callback(textbox.Text, enterPressed)
		end
	end)
	
	return {
		setValue = function(value)
			textbox.Text = value or ""
		end,
		getValue = function()
			return textbox.Text
		end
	}
end

function WietGUI:addSeparator()
	local separator = Instance.new("Frame")
	separator.Name = "Separator"
	separator.Size = UDim2.new(1, 0, 0, 2)
	separator.BackgroundColor3 = COLORS.SILVER
	separator.BorderSizePixel = 0
	separator.Parent = self.content
	
	return separator
end

function WietGUI:addSection(title)
	local section = Instance.new("Frame")
	section.Name = title .. "Section"
	section.Size = UDim2.new(1, 0, 0, isMobile and 40 or 30)
	section.BackgroundTransparency = 1
	section.Parent = self.content
	
	local sectionTitle = Instance.new("TextLabel")
	sectionTitle.Name = "SectionTitle"
	sectionTitle.Size = UDim2.new(1, 0, 1, 0)
	sectionTitle.BackgroundTransparency = 1
	sectionTitle.TextColor3 = COLORS.SILVER
	sectionTitle.Text = title
	sectionTitle.TextSize = isMobile and 24 or 18
	sectionTitle.Font = Enum.Font.GothamBold
	sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
	sectionTitle.Parent = section
	
	local line = Instance.new("Frame")
	line.Name = "Line"
	line.Size = UDim2.new(1, 0, 0, 1)
	line.Position = UDim2.new(0, 0, 1, 0)
	line.BackgroundColor3 = COLORS.SILVER
	line.BorderSizePixel = 0
	line.Parent = section
	
	return section
end

function WietGUI:show()
	self.gui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
end

function WietGUI:hide()
	self.gui.Parent = nil
end

function WietGUI:destroy()
	self.gui:Destroy()
end

return WietGUI
